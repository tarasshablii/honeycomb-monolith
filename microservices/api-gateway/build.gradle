import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id "org.springframework.boot" version "$springBootVersion"
    id "io.spring.dependency-management" version "$springDependencyManagementVersion"
    id "org.openapi.generator" version "$openApiGeneratorVersion"
}

sourceSets.main.java.srcDirs += "$projectDir/build/generated/src/main/java"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation "org.openapitools:jackson-databind-nullable:$openapiJacksonDatabindNullableVersion"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springdocWebmvcUiVersion"
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation "com.google.code.findbugs:jsr305:3.0.2"

    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'

    // Overriding to avoid vulnerability
    implementation "org.yaml:snakeyaml:$snakeYamlVersion"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springDependenciesVersion"
    }
}

springBoot {
    mainClass = "dev.tarasshablii.opora.microservices.apigateway.Application"
}

jar {
    enabled = false
}

bootJar {
    archiveBaseName = "$rootProject.name-apigateway-service"
    archiveVersion = ""
}

task openApiGenerateServer(type: GenerateTask) {
    generatorName = "spring"
    library = "spring-boot"
    inputSpec = "$projectDir/../../openapi/opora-api.yml"
    outputDir = "$projectDir/build/generated"
    modelNameSuffix = "Dto"
    apiPackage = "dev.tarasshablii.opora.microservices.apigateway.endpoint.rest.api"
    modelPackage = "dev.tarasshablii.opora.microservices.apigateway.endpoint.rest.dto"
    configOptions = [
            generatedConstructorWithRequiredArgs: "false",
            interfaceOnly                       : "true",
            useSpringController                 : "true",
            useTags                             : "true",
            dateLibrary                         : "java8",
            skipDefaultInterface                : "true",
            useSpringBoot3                      : "true",
            useJakartaEe                        : "true",
            additionalModelTypeAnnotations      :
                    """
                        @lombok.extern.jackson.Jacksonized
                        @com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)
                    """

    ]
    typeMappings = [
            OffsetDateTime: "Instant"
    ]
    importMappings = [
            "java.time.OffsetDateTime": "java.time.Instant"
    ]

    doLast {
        delete fileTree("$projectDir/build/generated/src/main/java/") {
            include '**/rest/api/ApiUtil.java'
        }
    }

    tasks.compileJava.dependsOn it
}

task openApiGenerateSponsorsClient(type: GenerateTask) {
    generatorName = "java"        //https://openapi-generator.tech/docs/generators/java/
    library = "webclient"
    inputSpec = "$projectDir/../../openapi/opora-sponsors-api.yml"
    outputDir = "$projectDir/build/generated"
    modelNameSuffix = "Dto"
    modelPackage = "dev.tarasshablii.opora.microservices.apigateway.provider.rest.sponsors.dto"
    apiPackage = "dev.tarasshablii.opora.microservices.apigateway.provider.rest.sponsors.api"
    configOptions = [
            useJakartaEe                  : "false",
            dateLibrary                   : "java8",
            additionalModelTypeAnnotations:
                    "@lombok.Builder\n" +
                            "@lombok.AllArgsConstructor\n" +
                            "@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)"
    ]
    typeMappings = [
            OffsetDateTime: "Instant"
    ]
    importMappings = [
            "java.time.OffsetDateTime": "java.time.Instant"
    ]

    doLast {
        delete fileTree("$projectDir/build/generated/src/main/java/") {
            include '**/rest/api/ApiUtil.java'
        }
    }

    tasks.compileJava.dependsOn it
}

task openApiGenerateInitiativesClient(type: GenerateTask) {
    generatorName = "java"        //https://openapi-generator.tech/docs/generators/java/
    library = "webclient"
    inputSpec = "$projectDir/../../openapi/opora-initiatives-api.yml"
    outputDir = "$projectDir/build/generated"
    modelNameSuffix = "Dto"
    modelPackage = "dev.tarasshablii.opora.microservices.apigateway.provider.rest.initiatives.dto"
    apiPackage = "dev.tarasshablii.opora.microservices.apigateway.provider.rest.initiatives.api"
    configOptions = [
            useJakartaEe                  : "false",
            dateLibrary                   : "java8",
            useOneOfInterfaces            : "true",
            additionalModelTypeAnnotations:
                    "@lombok.Builder\n" +
                            "@lombok.AllArgsConstructor\n" +
                            "@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)"
    ]
    typeMappings = [
            OffsetDateTime: "Instant"
    ]
    importMappings = [
            "java.time.OffsetDateTime": "java.time.Instant"
    ]

    doLast {
        delete fileTree("$projectDir/build/generated/src/main/java/") {
            include '**/rest/api/ApiUtil.java'
        }
    }

    tasks.compileJava.dependsOn it
}

task openApiGenerateMediaClient(type: GenerateTask) {
    generatorName = "java"        //https://openapi-generator.tech/docs/generators/java/
    library = "webclient"
    inputSpec = "$projectDir/../../openapi/opora-media-api.yml"
    outputDir = "$projectDir/build/generated"
    modelNameSuffix = "Dto"
    modelPackage = "dev.tarasshablii.opora.microservices.apigateway.provider.rest.media.dto"
    apiPackage = "dev.tarasshablii.opora.microservices.apigateway.provider.rest.media.api"
    configOptions = [
            useJakartaEe                  : "false",
            dateLibrary                   : "java8",
            additionalModelTypeAnnotations:
                    "@lombok.Builder\n" +
                            "@lombok.AllArgsConstructor\n" +
                            "@com.fasterxml.jackson.annotation.JsonInclude(com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL)"
    ]
    typeMappings = [
            OffsetDateTime: "Instant"
    ]
    importMappings = [
            "java.time.OffsetDateTime": "java.time.Instant"
    ]

    doLast {
        delete fileTree("$projectDir/build/generated/src/main/java/") {
            include '**/rest/api/ApiUtil.java'
        }
    }

    tasks.compileJava.dependsOn it
}

test {

}
